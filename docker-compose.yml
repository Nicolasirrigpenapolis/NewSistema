version: "3.9"
services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mdfesql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SA_PASSWORD:-ChangeMe123!}
      MSSQL_PID: Express
    ports:
      - "${MDFE_SQL_EXTERNAL_PORT:-14333}:1433"
    volumes:
      - sql_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P '$$SA_PASSWORD' -Q 'SELECT 1' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        BUILD_FRONTEND: ${BUILD_FRONTEND:-1}
    container_name: mdfeapi
    depends_on:
      sqlserver:
        condition: service_healthy
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      MDFE_DB_CONN: ${MDFE_DB_CONN:-Server=sqlserver,1433;Database=SistemaModelo;User Id=sa;Password=${SA_PASSWORD:-ChangeMe123!};TrustServerCertificate=True;Encrypt=False;MultipleActiveResultSets=True;Connection Timeout=15;Pooling=true;Min Pool Size=5;Max Pool Size=100;}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-DevSecretKeyChangeMe}
      SEED_DATABASE: ${SEED_DATABASE:-1}
      CREATE_MASTER_USER: ${CREATE_MASTER_USER:-1}
    ports:
      - "${API_PORT:-8080}:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/live || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5

  # Frontend separado (opcional). Defina BUILD_FRONTEND=0 para n√£o embutir no backend.
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mdfeweb
    depends_on:
      - api
    environment:
      NODE_ENV: production
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    restart: unless-stopped
    profiles:
      - standalone-frontend

volumes:
  sql_data:
