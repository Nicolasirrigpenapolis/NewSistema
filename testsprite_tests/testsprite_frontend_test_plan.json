[
  {
    "id": "TC001",
    "title": "User Login with Valid Credentials",
    "description": "Verify that a user can successfully log in with valid credentials and a JWT token is received with auto-renewal functionality enabled.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /login page"
      },
      {
        "type": "action",
        "description": "Enter valid username and password"
      },
      {
        "type": "action",
        "description": "Click on login button"
      },
      {
        "type": "assertion",
        "description": "Verify user is redirected to /dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify a valid JWT token is received and stored"
      },
      {
        "type": "assertion",
        "description": "Check token auto-renewal activates before expiration"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User Login with Invalid Credentials",
    "description": "Verify system rejects login attempts with incorrect username or password and displays an appropriate error message.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /login page"
      },
      {
        "type": "action",
        "description": "Enter invalid username or password"
      },
      {
        "type": "action",
        "description": "Click on login button"
      },
      {
        "type": "assertion",
        "description": "Verify login is rejected"
      },
      {
        "type": "assertion",
        "description": "Verify error message 'Invalid credentials' is displayed"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "JWT Token Expiration and Renewal Handling",
    "description": "Verify that the JWT token expires properly and the renewal prompt shows before expiration, allowing smooth session continuation.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in with valid credentials"
      },
      {
        "type": "action",
        "description": "Remain idle until token is near expiration"
      },
      {
        "type": "assertion",
        "description": "Verify renewal alert is displayed to user"
      },
      {
        "type": "action",
        "description": "Trigger token renewal"
      },
      {
        "type": "assertion",
        "description": "Verify new token is issued and session continues without logout"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Access Control Based on User Role Permissions",
    "description": "Verify that users cannot access pages or perform actions without proper permissions according to their role.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as user with limited permissions"
      },
      {
        "type": "action",
        "description": "Attempt to navigate to /admin/usuarios page"
      },
      {
        "type": "assertion",
        "description": "Verify access denied or redirect to unauthorized page"
      },
      {
        "type": "action",
        "description": "Attempt to perform restricted API operations"
      },
      {
        "type": "assertion",
        "description": "Verify API returns proper authorization error"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Create MDF-e with Valid Data and Authorize",
    "description": "Verify that a user can create a new MDF-e, validate data, generate INI file, communicate with SEFAZ via ACBr library, and confirm status is updated to Authorized.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /mdfe-editor"
      },
      {
        "type": "action",
        "description": "Fill the MDF-e form with valid data"
      },
      {
        "type": "action",
        "description": "Submit form to generate and validate MDF-e"
      },
      {
        "type": "assertion",
        "description": "Verify INI file is generated correctly"
      },
      {
        "type": "action",
        "description": "Send MDF-e to SEFAZ via ACBr library"
      },
      {
        "type": "assertion",
        "description": "Verify MDF-e status changes to Authorized"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Handle MDF-e Emission Failures with Invalid Data",
    "description": "Verify that the system detects invalid MDF-e data, rejects emission, and sets proper status (Rejected) with detailed error messages.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /mdfe-editor"
      },
      {
        "type": "action",
        "description": "Enter invalid or incomplete data in MDF-e form"
      },
      {
        "type": "action",
        "description": "Attempt to submit MDF-e"
      },
      {
        "type": "assertion",
        "description": "Verify validation errors are displayed"
      },
      {
        "type": "assertion",
        "description": "Verify MDF-e emission is rejected"
      },
      {
        "type": "assertion",
        "description": "Verify MDF-e status is set to Rejected with error details"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "CRUD Operations for Vehicles",
    "description": "Verify full lifecycle management of vehicle entities including creation, reading, updating, and deletion with data integrity.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /veiculos"
      },
      {
        "type": "action",
        "description": "Create a new vehicle with valid data"
      },
      {
        "type": "assertion",
        "description": "Verify the vehicle is listed and data matches"
      },
      {
        "type": "action",
        "description": "Update vehicle details"
      },
      {
        "type": "assertion",
        "description": "Verify updated data is saved and displayed"
      },
      {
        "type": "action",
        "description": "Delete the vehicle"
      },
      {
        "type": "assertion",
        "description": "Verify vehicle is removed from the list and database"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Import Municipalities from IBGE API",
    "description": "Verify that the system properly imports municipalities data from the external IBGE API and lists them correctly with database persistence.",
    "category": "integration",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Trigger the import of municipalities from IBGE API"
      },
      {
        "type": "assertion",
        "description": "Verify API call is successful and data is returned"
      },
      {
        "type": "assertion",
        "description": "Verify municipalities are saved correctly in database"
      },
      {
        "type": "assertion",
        "description": "Verify municipalities are listed correctly in /municipios page"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Paginated Listing and Filtering of MDF-e",
    "description": "Verify that MDF-e documents are listed with pagination and filters work correctly for different criteria (status, date range, emitter).",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /mdfes page"
      },
      {
        "type": "assertion",
        "description": "Verify MDF-e list displays with pagination controls"
      },
      {
        "type": "action",
        "description": "Apply filters such as status = Authorized and date range"
      },
      {
        "type": "assertion",
        "description": "Verify filtered results match the criteria"
      },
      {
        "type": "action",
        "description": "Navigate through pages using pagination controls"
      },
      {
        "type": "assertion",
        "description": "Verify correct entries are displayed per page"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Dashboard Load and Data Accuracy",
    "description": "Verify the /dashboard page loads within performance requirements and displays accurate statistics and recent activities.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in and navigate to /dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify page loads in less than 3 seconds"
      },
      {
        "type": "assertion",
        "description": "Verify displayed statistics match backend data"
      },
      {
        "type": "assertion",
        "description": "Verify recent activities feed is current and properly formatted"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "Vehicle Maintenance Lifecycle Management",
    "description": "Verify that vehicle maintenance records can be created, updated, listed with filters, and deleted properly in /manutencoes page.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /manutencoes"
      },
      {
        "type": "action",
        "description": "Create a new maintenance record with valid data"
      },
      {
        "type": "assertion",
        "description": "Verify maintenance is listed with correct details"
      },
      {
        "type": "action",
        "description": "Update maintenance record"
      },
      {
        "type": "assertion",
        "description": "Verify updated details are saved and displayed"
      },
      {
        "type": "action",
        "description": "Delete maintenance record"
      },
      {
        "type": "assertion",
        "description": "Verify record is removed from list and database"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Expense Report Generation with Filters and Export",
    "description": "Verify users can generate expense reports applying filters and export results in supported formats such as PDF and Excel.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /relatorios page"
      },
      {
        "type": "action",
        "description": "Select expense report and apply date and category filters"
      },
      {
        "type": "action",
        "description": "Generate report"
      },
      {
        "type": "assertion",
        "description": "Verify report data corresponds to filter criteria"
      },
      {
        "type": "action",
        "description": "Export report as PDF"
      },
      {
        "type": "assertion",
        "description": "Verify PDF file downloads and contents are correct"
      },
      {
        "type": "action",
        "description": "Export report as Excel"
      },
      {
        "type": "assertion",
        "description": "Verify Excel file downloads and contains correct data"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "External CNPJ Consultation Integration",
    "description": "Verify that querying external CNPJ API returns accurate data and populates forms correctly with fallback and error handling.",
    "category": "integration",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to form with CNPJ input (e.g., /emitentes/new)"
      },
      {
        "type": "action",
        "description": "Enter valid CNPJ and trigger consultation"
      },
      {
        "type": "assertion",
        "description": "Verify correct data fills the form fields"
      },
      {
        "type": "action",
        "description": "Enter invalid or non-existent CNPJ"
      },
      {
        "type": "assertion",
        "description": "Verify appropriate error message is shown or fallback occurs"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Form Validation and Input Masks",
    "description": "Verify all forms enforce validation rules and input masks for fields such as CNPJ, CPF, dates, and phone numbers across the system.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to various forms (emitentes, condutores, fornecedores, etc.)"
      },
      {
        "type": "action",
        "description": "Enter invalid data formats in masked fields"
      },
      {
        "type": "assertion",
        "description": "Verify validation messages appear appropriately"
      },
      {
        "type": "action",
        "description": "Enter valid data that conforms to masks"
      },
      {
        "type": "assertion",
        "description": "Verify form submission is accepted with no validation error"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Theme Switching Between Light and Dark Modes",
    "description": "Verify that users can switch between light and dark UI themes and changes persist across pages and sessions.",
    "category": "ui",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to any page after login"
      },
      {
        "type": "action",
        "description": "Toggle theme switch to dark mode"
      },
      {
        "type": "assertion",
        "description": "Verify UI changes to dark theme immediately"
      },
      {
        "type": "action",
        "description": "Navigate to other pages"
      },
      {
        "type": "assertion",
        "description": "Verify dark theme persists"
      },
      {
        "type": "action",
        "description": "Reload the application"
      },
      {
        "type": "assertion",
        "description": "Verify theme preference is remembered and applied"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "User Management CRUD Operations",
    "description": "Verify administrators can create, read, update, and delete users with role assignments and password security enforced.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /admin/usuarios"
      },
      {
        "type": "action",
        "description": "Create a new user with valid data and assign roles"
      },
      {
        "type": "assertion",
        "description": "Verify user is listed with correct data"
      },
      {
        "type": "action",
        "description": "Update user details and roles"
      },
      {
        "type": "assertion",
        "description": "Verify updates are saved and reflected"
      },
      {
        "type": "action",
        "description": "Delete the user"
      },
      {
        "type": "assertion",
        "description": "Verify user is removed from list and database"
      },
      {
        "type": "assertion",
        "description": "Verify password is stored using BCrypt hashing"
      }
    ]
  },
  {
    "id": "TC017",
    "title": "Permission Matrix Visualization and Role Presets",
    "description": "Verify that the permission matrix UI accurately reflects permissions per role and allows application of preset permission sets.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to /admin/cargos"
      },
      {
        "type": "action",
        "description": "View permission matrix for an existing role"
      },
      {
        "type": "assertion",
        "description": "Verify matrix shows all relevant permissions clearly"
      },
      {
        "type": "action",
        "description": "Apply a permission preset to a role"
      },
      {
        "type": "assertion",
        "description": "Verify permissions update according to the preset"
      }
    ]
  },
  {
    "id": "TC018",
    "title": "System Performance Under Load",
    "description": "Verify that API response times are below 2 seconds and dashboard loads below 3 seconds under typical and high load conditions.",
    "category": "performance",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate typical user activity with concurrent API requests"
      },
      {
        "type": "assertion",
        "description": "Verify average API response time is under 2 seconds"
      },
      {
        "type": "action",
        "description": "Navigate to /dashboard during load test"
      },
      {
        "type": "assertion",
        "description": "Verify dashboard loads in less than 3 seconds"
      }
    ]
  },
  {
    "id": "TC019",
    "title": "BCrypt Password Hashing Validation",
    "description": "Verify that user passwords are stored hashed with BCrypt and plaintext passwords are never stored or transmitted.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create or update user password via API or UI"
      },
      {
        "type": "assertion",
        "description": "Verify password hash stored in database uses BCrypt format"
      },
      {
        "type": "assertion",
        "description": "Verify plaintext password does not appear in logs or responses"
      },
      {
        "type": "action",
        "description": "Attempt login using correct and incorrect passwords"
      },
      {
        "type": "assertion",
        "description": "Verify authentication succeeds only with correct password"
      }
    ]
  },
  {
    "id": "TC020",
    "title": "System Uptime, Backup and Audit Logging",
    "description": "Verify system reliability with at least 99% uptime, daily backups are created successfully, and audit logs record critical user actions.",
    "category": "reliability",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Check system uptime logs or monitoring dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify uptime is equal or greater than 99%"
      },
      {
        "type": "action",
        "description": "Check for presence and integrity of daily backup files"
      },
      {
        "type": "assertion",
        "description": "Verify backups complete successfully on schedule"
      },
      {
        "type": "action",
        "description": "Perform sample user actions (login, create MDF-e, update user)"
      },
      {
        "type": "assertion",
        "description": "Verify audit logs correctly register user actions with timestamps and user info"
      }
    ]
  }
]
